# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: Int!
  username: String!
  password: String!
  avatar: String!
  createdAt: String!
  updatedAt: String!
}

type Meta {
  itemCount: Float!
  totalItems: Float!
  itemsPerPage: Float!
  totalPages: Float!
  currentPage: Float!
}

type ProviderPagination {
  items: [Provider!]!
  meta: Meta!
}

type Contact {
  type: Float!
  list: [String!]!
}

type Method {
  id: Float!
  label: Float!
  archivedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Payment {
  id: Float!
  reference: String!
  method: Method!
  date: String!
  archivedAt: DateTime!
}

type Invoice {
  id: Float!
  date: Float!
  dueDate: Float!
  payment: Payment
  archivedAt: DateTime!
}

type Article {
  id: Float!
  dci: String!
  commercialName: String!
  medicines: [Medicine!]
  updatedAt: DateTime!
  createdAt: DateTime!
  archivedAt: DateTime
}

type Form {
  id: Float!
  label: String!
  archivedAt: DateTime
}

type Dosage {
  id: Float!
  parentId: Float!
  label: String!
  archivedAt: DateTime
}

type Unit {
  label: String!
  multiplicity: Float!
}

type Packaging {
  id: Float!
  units: [Unit!]!
  archivedAt: DateTime
}

type CommandLine {
  id: Float!
  quantity: Float!
  medicine: Medicine!
  command: Command!
  archivedAt: DateTime!
}

type Medicine {
  id: Float!
  article: Article!
  form: Form!
  dosage: Dosage!
  packaging: Packaging!
  batches: [Batch!]!
  commandLines: [CommandLine!]
  archivedAt: DateTime!
}

type Patient {
  id: Float!
  lastName: String!
  firstName: String!
  phone: String!
  prescriptions: [Prescription!]!
  archivedAt: DateTime!
}

type Prescription {
  id: Float!
  reference: String!
  description: String!
  patient: Patient!
  archivedAt: DateTime!
}

type Sale {
  id: Float!
  date: String!
  prescription: Prescription
  saleLines: [SaleLine!]!
  archivedAt: DateTime!
}

type SaleLine {
  id: Float!
  saleId: Float!
  quantity: Float!
  batches: Batch!
  sales: Sale!
  archivedAt: DateTime!
}

type Batch {
  id: Float!
  medicine: Medicine!
  assuredLines: [AssuredLine!]!
  saleLines: [SaleLine!]!
  manufactureDate: String!
  expirationDate: String!
  stock: String!
  archivedAt: DateTime!
}

type AssuredLine {
  id: Int!
  delivery: Delivery!
  expirationDate: String!
  quantity: Float!
  batch: Batch!
}

type Delivery {
  id: Float!
  command: Command!
  invoice: Invoice
  assuredLines: [AssuredLine!]!
  createdAt: DateTime!
  archivedAt: DateTime!
}

type Command {
  id: Float!
  delivery: Delivery
  commandLines: [CommandLine!]
  provider: Provider!
  createdAt: DateTime!
  archivedAt: DateTime!
}

type Provider {
  id: Float!
  name: String!
  contacts: [Contact!]!
  address: String!
  logo: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  commands: [Command!]!
  archivedAt: DateTime!
}

type ArticlePagination {
  items: [Article!]!
  meta: Meta!
}

type LoginDto {
  token: String!
}

type Query {
  providersPaginate(input: PaginationInput!): ProviderPagination!
  providers: [Provider!]!
  command(id: Int!): Command!
  commandLine(id: Int!): CommandLine!
  medicine(id: Int!): Medicine!
  forms: [Form!]!
  dosages: [Dosage!]!
  packaging: [Packaging!]!
  paginateArticles(input: PaginationInput!): ArticlePagination!
  delivery(id: Int!): Delivery!
  assuredLine(id: Int!): AssuredLine!
  invoice(id: Int!): Invoice!
  payment(id: Int!): Payment!
  method(id: Int!): Method!
  parcel(id: Int!): Batch!
  saleLine(id: Int!): SaleLine!
  sale(id: Int!): Sale!
  patient(id: Int!): Patient!
  whoAmI: User!
  prescription(id: Int!): Prescription!
}

input PaginationInput {
  keyword: String
  page: Float!
  limit: Float!
}

type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(input: UpdateUserInput!): User!
  saveProvider(input: SaveProviderInput!): Provider!
  createCommand(createCommandInput: CreateCommandInput!): Command!
  updateCommand(updateCommandInput: UpdateCommandInput!): Command!
  removeCommand(id: Int!): Command!
  createCommandLine(createCommandLineInput: CreateCommandLineInput!): CommandLine!
  updateCommandLine(updateCommandLineInput: UpdateCommandLineInput!): CommandLine!
  removeCommandLine(id: Int!): CommandLine!
  saveMedicine(input: MedicineInput!): Medicine!
  removeMedicine(id: Int!): Medicine!
  saveForm(input: FormInput!): Form!
  removeForm(id: Int!): Form!
  saveDosage(input: SaveDosageInput!): Dosage!
  removeDosage(id: Int!): Dosage!
  createPackaging(input: [CreatePackagingInput!]!): Packaging!
  updatePackaging(input: UpdatePackagingInput!): Packaging!
  saveArticle(input: SaveArticleInput!): Article!
  removeArticle(id: Int!): Article!
  createDelivery(createDeliveryInput: CreateDeliveryInput!): Delivery!
  updateDelivery(updateDeliveryInput: UpdateDeliveryInput!): Delivery!
  removeDelivery(id: Int!): Delivery!
  createAssuredLine(createAssuredLineInput: CreateAssuredLineInput!): AssuredLine!
  updateAssuredLine(updateAssuredLineInput: UpdateAssuredLineInput!): AssuredLine!
  removeAssuredLine(id: Int!): AssuredLine!
  createInvoice(createInvoiceInput: CreateInvoiceInput!): Invoice!
  updateInvoice(updateInvoiceInput: UpdateInvoiceInput!): Invoice!
  removeInvoice(id: Int!): Invoice!
  createPayment(createPaymentInput: CreatePaymentInput!): Payment!
  updatePayment(updatePaymentInput: UpdatePaymentInput!): Payment!
  removePayment(id: Int!): Payment!
  createMethod(createMethodInput: CreateMethodInput!): Method!
  updateMethod(updateMethodInput: UpdateMethodInput!): Method!
  removeMethod(id: Int!): Method!
  createParcel(createParcelInput: CreateParcelInput!): Batch!
  updateParcel(updateParcelInput: UpdateParcelInput!): Batch!
  removeParcel(id: Int!): Batch!
  createSaleLine(createSaleLineInput: CreateSaleLineInput!): SaleLine!
  updateSaleLine(updateSaleLineInput: UpdateSaleLineInput!): SaleLine!
  removeSaleLine(id: Int!): SaleLine!
  createSale(createSaleInput: CreateSaleInput!): Sale!
  updateSale(updateSaleInput: UpdateSaleInput!): Sale!
  removeSale(id: Int!): Sale!
  createPatient(createPatientInput: CreatePatientInput!): Patient!
  updatePatient(updatePatientInput: UpdatePatientInput!): Patient!
  removePatient(id: Int!): Patient!
  login(input: AuthInput!): LoginDto!
  createPrescription(createPrescriptionInput: CreatePrescriptionInput!): Prescription!
  updatePrescription(updatePrescriptionInput: UpdatePrescriptionInput!): Prescription!
  removePrescription(id: Int!): Prescription!
}

input CreateUserInput {
  username: String!
  password: String!
}

input UpdateUserInput {
  id: Float!
  username: String!
}

input SaveProviderInput {
  id: Float!
  name: String!
  address: String!
  contacts: [ContactInput!]!
}

input ContactInput {
  type: Float!
  list: [String!]!
}

input CreateCommandInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCommandInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateCommandLineInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCommandLineInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input MedicineInput {
  id: Int!
  articleId: Int!
  formId: Int!
  dosageId: Int!
  packagingId: Int!
}

input FormInput {
  id: Int!
  label: String!
}

input SaveDosageInput {
  id: Float!
  parentId: Float!
  label: String!
}

input CreatePackagingInput {
  label: String!
  multiplicity: Float!
}

input UpdatePackagingInput {
  id: Float!
  units: [CreatePackagingInput!]!
}

input SaveArticleInput {
  id: Int = 0
  dci: String!
  commercialName: String!
}

input CreateDeliveryInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateDeliveryInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateAssuredLineInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAssuredLineInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateInvoiceInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateInvoiceInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreatePaymentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePaymentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateMethodInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateMethodInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateParcelInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateParcelInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSaleLineInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSaleLineInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateSaleInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateSaleInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreatePatientInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePatientInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input AuthInput {
  username: String!
  password: String!
}

input CreatePrescriptionInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdatePrescriptionInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}
